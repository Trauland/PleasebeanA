module MetalDetector
    (
            input clk,      //The clock on the board
            input MD0, MD1, MD2, MD3,           // Metal Detectors 1-4. Set as pins JA(0)-JA(3)
            output MDLED0, MDLED1, MDLED2, MDLED3,                       // LED on Basys board used to tell if any of the sensors are tripped
                                                                         // LEDs are logic low, so test bench will show 0 for on
            output integer  MagnetStart,     // Register to pass to the Magnet to turn on if a washer is found 
            output integer  RoverStop       // Register to pass to the Rover to stop the car if a washer is found
    );
    
            reg BMD0, BMD1 ,BMD2, BMD3;         // Buffers to keep inputs clock synchronous 
            reg oroutput;                   // a register to hold the output of the or gate

            
                    assign MDLED0 = ~MD0;
                    assign MDLED1 = ~MD1;
                    assign MDLED2 = ~MD2;
                    assign MDLED3 = ~MD3;
                    
            always @ (posedge clk)
                begin
                            BMD0 <= MD0;            // Buffering all the inputs
                            BMD1 <= MD1;
                            BMD2 <= MD2;
                            BMD3 <= MD3;
                            
                           assign oroutput = BMD0|BMD1|BMD2|BMD3;   // oroutput is true if any of the buffers are true
                           
                     if (oroutput == 1)          // if oroutput is true we stop the rover and turn on the magnet
                        begin
                            MagnetStart <= 1;
                            RoverStop <= 1;
                        end
                   
                     else
                        begin
                            MagnetStart <= 0;       // if or output is false we start the rover and turn off the magnet
                            RoverStop <= 0;
                        end
                                                       
                end          
                        
endmodule
